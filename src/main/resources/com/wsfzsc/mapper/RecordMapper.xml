<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wsfzsc.mapper.RecordMapper">
  <resultMap id="BaseResultMap" type="com.wsfzsc.pojo.Record">
    <id column="record_id" jdbcType="INTEGER" property="recordId" />
    <result column="record_commodity_id" jdbcType="INTEGER" property="recordCommodityId" />
    <result column="record_user_id" jdbcType="INTEGER" property="recordUserId" />
    <result column="record_frequency" jdbcType="INTEGER" property="recordFrequency" />
    <result column="record_time" jdbcType="TIMESTAMP" property="recordTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    record_id, record_commodity_id, record_user_id, record_frequency, record_time
  </sql>
  <select id="selectByExample" parameterType="com.wsfzsc.pojo.RecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from record
    where record_id = #{recordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from record
    where record_id = #{recordId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wsfzsc.pojo.RecordExample">
    delete from record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wsfzsc.pojo.Record">
    insert into record (record_id, record_commodity_id, record_user_id, 
      record_frequency, record_time)
    values (#{recordId,jdbcType=INTEGER}, #{recordCommodityId,jdbcType=INTEGER}, #{recordUserId,jdbcType=INTEGER}, 
      #{recordFrequency,jdbcType=INTEGER}, #{recordTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.wsfzsc.pojo.Record">
    insert into record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        record_id,
      </if>
      <if test="recordCommodityId != null">
        record_commodity_id,
      </if>
      <if test="recordUserId != null">
        record_user_id,
      </if>
      <if test="recordFrequency != null">
        record_frequency,
      </if>
      <if test="recordTime != null">
        record_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="recordCommodityId != null">
        #{recordCommodityId,jdbcType=INTEGER},
      </if>
      <if test="recordUserId != null">
        #{recordUserId,jdbcType=INTEGER},
      </if>
      <if test="recordFrequency != null">
        #{recordFrequency,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null">
        #{recordTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wsfzsc.pojo.RecordExample" resultType="java.lang.Long">
    select count(*) from record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update record
    <set>
      <if test="record.recordId != null">
        record_id = #{record.recordId,jdbcType=INTEGER},
      </if>
      <if test="record.recordCommodityId != null">
        record_commodity_id = #{record.recordCommodityId,jdbcType=INTEGER},
      </if>
      <if test="record.recordUserId != null">
        record_user_id = #{record.recordUserId,jdbcType=INTEGER},
      </if>
      <if test="record.recordFrequency != null">
        record_frequency = #{record.recordFrequency,jdbcType=INTEGER},
      </if>
      <if test="record.recordTime != null">
        record_time = #{record.recordTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update record
    set record_id = #{record.recordId,jdbcType=INTEGER},
      record_commodity_id = #{record.recordCommodityId,jdbcType=INTEGER},
      record_user_id = #{record.recordUserId,jdbcType=INTEGER},
      record_frequency = #{record.recordFrequency,jdbcType=INTEGER},
      record_time = #{record.recordTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wsfzsc.pojo.Record">
    update record
    <set>
      <if test="recordCommodityId != null">
        record_commodity_id = #{recordCommodityId,jdbcType=INTEGER},
      </if>
      <if test="recordUserId != null">
        record_user_id = #{recordUserId,jdbcType=INTEGER},
      </if>
      <if test="recordFrequency != null">
        record_frequency = #{recordFrequency,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null">
        record_time = #{recordTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wsfzsc.pojo.Record">
    update record
    set record_commodity_id = #{recordCommodityId,jdbcType=INTEGER},
      record_user_id = #{recordUserId,jdbcType=INTEGER},
      record_frequency = #{recordFrequency,jdbcType=INTEGER},
      record_time = #{recordTime,jdbcType=TIMESTAMP}
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
</mapper>