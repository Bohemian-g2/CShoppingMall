<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			    http://www.springframework.org/schema/beans/spring-beans.xsd
			    http://www.springframework.org/schema/context
			    http://www.springframework.org/schema/context/spring-context.xsd
			    http://www.springframework.org/schema/aop
			    http://www.springframework.org/schema/aop/spring-aop.xsd
			    http://www.springframework.org/schema/tx
			    http://www.springframework.org/schema/tx/spring-tx.xsd
			    http://www.springframework.org/schema/mvc
			    http://www.springframework.org/schema/mvc/spring-mvc.xsd">

  <context:component-scan base-package="com.wsfzsc.mapper"></context:component-scan>
  <!--mapper层配置开始-->
  <!-- 配置jdbc.properties配置文件-->
  <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
  <!--配置连接池,阿里 druid数据库连接池 -->
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
    <property name="driverClassName" value="${jdbc.driver}"></property>
    <property name="url" value="${jdbc.url}"></property>
    <property name="username" value="${jdbc.username}"></property>
    <property name="password" value="${jdbc.password}"></property>
  </bean>

  <!--配置生产SqlSession的工厂-->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"></property>
    <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    <property name="mapperLocations" value="classpath:com/wsfzsc/mapper/*.xml"></property>
    <!--配置别名-->
    <property name="typeAliasesPackage" value="com.wsfzsc.pojo" ></property>
  </bean>

  <!--扫描接口包路径，生成包下所有接口的代理对象-->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.wsfzsc.mapper"></property>
  </bean>
  <!--mapper层配置结束-->


  <!--service层配置开始-->
  <!--组件扫描配置-->
  <context:component-scan base-package="com.wsfzsc.service.Impl"></context:component-scan>

  <!--配置事务管理器-->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"></property>
  </bean>
  <!--配置事务的通知-->
  <tx:advice id="advice">
    <tx:attributes>
      <!--查询方法以find开头，修改以update开头，增加以save开头，删除以delete开头的方法设置相应的事务级别-->
      <!--REQUIRED：如果当前没有事务，就新建一个事务，如果已经存在一个事务中，加入到这个事务中。这是最常见的选择。-->
      <tx:method name="find*" read-only="true"/>
      <tx:method name="update*" propagation="REQUIRED"/>
      <tx:method name="save*" propagation="REQUIRED"/>
      <tx:method name="delete*" propagation="REQUIRED"/>
    </tx:attributes>
  </tx:advice>
  <!--配置aop切面-->
  <aop:config>
    <aop:pointcut id="pointcut" expression="execution(* com.wsfzsc.service.Impl.*.*(..))"/>
    <aop:advisor advice-ref="advice" pointcut-ref="pointcut"></aop:advisor>
  </aop:config>
  <!--service层配置结束-->

<!--工具类配置,账号自动生成-->
  <bean id="guid" class="com.wsfzsc.util.GUID">
    <property name="bit" value="${admin.GUID}"></property>
    <property name="adminMapper" ref="adminMapper"></property>
    <property name="userInfMapper" ref="userInfMapper"></property>
  </bean>

</beans>
